buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.jain.temple.jainmandirdarshan"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 35
        versionName "3.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
         //   storeFile file('C:/Users/prince.jain/AndroidStudioProjects/JainMandirDarshan/app/mandir.keystore')
            storeFile file('D:\\Studio\\JainMandirDarshan\\app\\mandir.jks')
            storePassword "princejain"
            keyAlias "key0"
            keyPassword "princejain"
            v2SigningEnabled true
        }
    }

    buildTypes {
       /* release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }*/
        release {
            debuggable false
            minifyEnabled true
            useProguard true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', "ApiKey", JainMandirDarshan_PlaceApiKey
            resValue 'string', "api_key", JainMandirDarshan_PlaceApiKey

            buildConfigField 'String', "BrowserApiKey", JainMandirDarshan_GoogleBrowserApiKey
            resValue 'string', "browser_api_key", JainMandirDarshan_GoogleBrowserApiKey

            buildConfigField 'String', "FcmServerKey", JainMandirDarshan_FabricApiKey
            resValue 'string', "fcm_server_key", JainMandirDarshan_FabricApiKey

            manifestPlaceholders = [map_io_direction_key: 'AIzaSyDFexjP1IlZBdHZ9VdXb4Gqq1OdjL2-TD0', fabric_api_key: '529b387ba3b4d5ba5b44ef9b3a4b930496a811b2']
        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', "ApiKey", JainMandirDarshan_PlaceApiKey
            resValue 'string', "api_key", JainMandirDarshan_PlaceApiKey

            buildConfigField 'String', "BrowserApiKey", JainMandirDarshan_GoogleBrowserApiKey
            resValue 'string', "browser_api_key", JainMandirDarshan_GoogleBrowserApiKey

            buildConfigField 'String', "FcmServerKey", JainMandirDarshan_FabricApiKey
            resValue 'string', "fcm_server_key", JainMandirDarshan_FabricApiKey

            manifestPlaceholders = [map_io_direction_key: 'AIzaSyDFexjP1IlZBdHZ9VdXb4Gqq1OdjL2-TD0', fabric_api_key: '529b387ba3b4d5ba5b44ef9b3a4b930496a811b2']
        }

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}



dependencies {
    def room_version = "1.1.1"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.0.0'
  implementation 'com.google.android.material:material:1.0.0-rc01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
   // implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta2'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    implementation 'com.google.firebase:firebase-storage:19.0.0'
    implementation 'com.google.firebase:firebase-database:19.0.0'
   /* implementation 'com.google.firebase:firebase-ads:17.3.4'*/
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.10.17'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.jsoup:jsoup:1.12.1'
    testImplementation 'junit:junit:4.12'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true;
    }
    //compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

   /* implementation "android.arch.persistence.room:runtime:$archRoomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$archRoomVersion"*/


    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version" // use kapt for Kotlin

    /*// optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"*/
}

apply plugin: 'com.google.gms.google-services'
